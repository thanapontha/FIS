<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/oxm
         http://www.springframework.org/schema/oxm/spring-oxm.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- import the dataSource definition -->
	<import resource="datasource-config.xml" />

	<!-- enables scanning for @Transactional annotations -->
	<tx:annotation-driven />
	<camel:camelContext id="camelContext">
		<camel:template id="camelTemplate" />
	</camel:camelContext>
	
	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			</props>
		</property>
		<!-- BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit 
			will win -->
		<property name="persistenceUnitName" value="st3main" />
		<property name="packagesToScan">
			<list>
				<value>th.co.toyota.application.model</value>
				<value>th.co.toyota.st3.api.model</value>
				<value>th.co.toyota.kv0.api.model.common</value>
				<value>th.co.toyota.kv0.api.model.report</value>
				<value>th.co.toyota.kv0.batch.report</value>
			</list>
		</property>
	</bean>
	
	<bean id="entityManagerFactory_bfw"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource_bfw">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			</props>
		</property>
		<!-- BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit 
			will win -->
		<property name="persistenceUnitName" value="st3main_bfw" />
		<property name="packagesToScan" value="th.co.toyota.st3.api.model" />
	</bean>
	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<!-- Transaction manager for a single JPA EntityManagerFactory (alternative 
		to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />
		
	<bean id="transactionManager_bfw" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory_bfw">
		<qualifier value="bfw" />
	</bean>	
		
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- <bean id="CST30170JasperReportConnector" class="th.co.toyota.st3.api.report.CST30170JasperReportConnector" 
		scope="prototype" p:templateFolder="${jr.template.folder}" p:destinationFolder="${jr.destination.folder}" 
		p:virtualizerFolder="${jr.virtualizer.folder}" p:virtualMaxSize="${jr.virtualMaxSize}"/> -->

	<bean id="CST30090ExcelGenerator" class="th.co.toyota.st3.api.download.CST30090ExcelGenerator"
		 p:maxRowsPerPage="${rowsperpage}" p:sharedFolder="${default.download.folder}" 
		 p:dateTimeFormat="${report.dateformat}" scope="prototype"/>

	<bean id="CST30091Downloader" class="th.co.toyota.st3.api.download.CST30091Downloader"
 		 p:defaultPath="${default.download.folder}" scope="prototype"/>
 		  
	<bean id="CST32010DocNoGenerator"
		class="th.co.toyota.st3.api.util.CST32010DocNoGenerator"
		scope="prototype" />
		
	<bean id="CST30000BatchManager"
		class="th.co.toyota.st3.api.util.CST30000BatchManager"
		scope="prototype" />
	
	<bean id="loggerBKV01130" class="th.co.toyota.st3.api.util.CST30000LoggerDb"
		p:moduleId="KV01" p:functionId="LKV01130" />
		
	<bean id="CST33010LogMonitoringExcel"
				class="th.co.toyota.application.util.CST33010LogMonitoringExcel"
				p:maxRowsPerPage="${rowsperpage}" p:sharedFolder="${default.download.folder}"
				p:dateTimeFormat="${report.dateformat}" scope="prototype" />
				
	<!--START: Email -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${email.host}" />
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>

	<bean id="mailerVelocity" class="th.co.toyota.kv0.api.common.MailSenderVelocityImpl"
		p:encoding="utf-8" p:applicationUrl="${application.url}"
		p:mailFrom="${email.from}" p:mailFromDescription="${email.senderDescription}" p:templateLocation="${email.velocityPath}" >
		<constructor-arg index="0" ref="velocityEngine" />
		<constructor-arg index="1" ref="mailSender" />		
		<property name="senderFooter" value="System" />
		
		<property name="templateSubmitKaikiengData" value="TemplateEmailSubmitKaikiengData.vm" />
		<property name="templateRejectKaikiengData" value="TemplateEmailRejectKaikiengData.vm" />
		<property name="templateFixKaikiengData" value="TemplateEmailRejectKaikiengData.vm" />
		
	</bean>
	<!-- END: Email -->
        
</beans>
